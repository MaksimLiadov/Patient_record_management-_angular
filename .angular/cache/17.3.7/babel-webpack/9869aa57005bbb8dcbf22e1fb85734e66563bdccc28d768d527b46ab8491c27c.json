{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"timeTable\"];\nconst _c1 = [\"tpl1\"];\nfunction TimetableComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 3, 4)(2, \"div\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ul\", 7);\n    i0.ɵɵelement(7, \"li\", 8);\n    i0.ɵɵelementStart(8, \"li\", 8);\n    i0.ɵɵtext(9, \"asdasdasd\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"li\", 9);\n    i0.ɵɵtext(11, \"asdasdasd\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const worker_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(worker_r3.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(worker_r3.fio);\n  }\n}\nexport let TimetableComponent = /*#__PURE__*/(() => {\n  class TimetableComponent {\n    viewContainerRef;\n    fio;\n    date;\n    checked;\n    timeTable;\n    tpl;\n    view;\n    constructor(viewContainerRef) {\n      this.viewContainerRef = viewContainerRef;\n    }\n    min = 5;\n    max = 10;\n    randomNumber = Math.floor(Math.random() * (this.max - this.min + 1)) + this.min;\n    scheduleArr = this.fillscheduleArr(this.randomNumber);\n    ngOnChanges(changes) {\n      let workerData = {\n        fio: this.fio,\n        date: this.date,\n        scheduleLenght: this.scheduleArr\n      };\n      if (changes.checked || changes.fio) {\n        if (this.checked) {\n          this.addWorker(workerData);\n        } else {\n          this.deleteWorker(workerData.fio);\n        }\n      }\n    }\n    deleteWorker(fio) {\n      let element = document.getElementById(`${fio}`);\n      element.remove();\n      console.log(\"del\" + this.fio);\n    }\n    addWorker(workerData) {\n      this.view = this.viewContainerRef.createEmbeddedView(this.tpl, {\n        $implicit: workerData\n      });\n      this.view.rootNodes[0].id = workerData.fio;\n      this.timeTable.nativeElement.appendChild(this.view.rootNodes[0]);\n    }\n    fillscheduleArr(lenght) {\n      let arr;\n      let time = new Date();\n      time.setHours(8, 0, 0);\n      for (let i = 0; i < lenght; i++) {\n        let hours = time.getHours().toString();\n        let minuts = time.getMinutes().toString();\n        console.log(hours);\n        console.log(minuts);\n        let newTimValue = `${hours} + ${minuts}`;\n        console.log(newTimValue);\n        // if (minuts == \"0\")\n        //   minuts = \"00\";\n        //arr.push(newTimValue);\n        time.setMinutes(time.getMinutes() + 10);\n      }\n      console.log(arr);\n      return arr;\n    }\n    static ɵfac = function TimetableComponent_Factory(t) {\n      return new (t || TimetableComponent)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TimetableComponent,\n      selectors: [[\"timetable\"]],\n      viewQuery: function TimetableComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timeTable = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tpl = _t.first);\n        }\n      },\n      inputs: {\n        fio: \"fio\",\n        date: \"date\",\n        checked: \"checked\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 0,\n      consts: [[1, \"timeTable\"], [\"timeTable\", \"\"], [\"tpl1\", \"\"], [1, \"oneWorker\"], [\"last\", \"\"], [1, \"date\"], [1, \"FIO\"], [1, \"schedule\"], [1, \"freely\"], [1, \"appointment\"]],\n      template: function TimetableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ul\", 0, 1);\n          i0.ɵɵtemplate(2, TimetableComponent_ng_template_2_Template, 12, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\".timeTable>.oneWorker{color:#ddd;background-color:#a9a9a9;display:flex;text-align:center;border-top-right-radius:5px;border-top-left-radius:5px;padding:10px;margin-bottom:20px;margin-right:50px;display:inline-block}.timeTable>.oneWorker>.date{background-color:#393939;width:100%;margin-top:-10px;margin-left:-10px;padding:10px;border-top-left-radius:5px;border-top-right-radius:5px;font-size:1.1rem}.timeTable>.oneWorker>.FIO{background-color:#6d6d6d;margin-left:-10px;margin-right:-10px;padding-top:10px;padding-bottom:10px;font-size:1.1rem}.timeTable>.oneWorker>.schedule{display:flex;justify-content:center;flex-direction:column;list-style-type:none;width:100%;padding-top:0;width:200px}.timeTable>.oneWorker>.schedule>.freely{background-color:#eee;border-top:1px solid #ddd;border-bottom:1px solid #ddd;margin-left:-50px;margin-right:-10px;font-size:1.1rem;color:#000}.timeTable>.oneWorker>.schedule>.appointment{background-color:green;border-top:1px solid #ddd;border-bottom:1px solid #ddd;margin-left:-50px;font-size:1.1rem;color:#000;margin-right:-10px}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return TimetableComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}