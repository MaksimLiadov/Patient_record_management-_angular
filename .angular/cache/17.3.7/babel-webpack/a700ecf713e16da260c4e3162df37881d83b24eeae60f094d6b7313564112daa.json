{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport * as echarts from 'echarts';\nimport * as i0 from \"@angular/core\";\nexport class EchartsDirective {\n  elementRef;\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n  }\n  ngAfterViewInit() {\n    const chart = echarts.init(this.elementRef.nativeElement);\n    chart.setOption(this.chartOptions);\n  }\n  chartOptions;\n  static ɵfac = function EchartsDirective_Factory(t) {\n    return new (t || EchartsDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: EchartsDirective,\n    selectors: [[\"\", \"echarts\", \"\"]]\n  });\n}\n__decorate([Input()], EchartsDirective.prototype, \"chartOptions\", void 0);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}