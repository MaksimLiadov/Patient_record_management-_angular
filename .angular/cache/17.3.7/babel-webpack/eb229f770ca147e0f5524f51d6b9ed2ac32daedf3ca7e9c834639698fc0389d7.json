{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, ViewChildren } from \"@angular/core\";\nlet WorkersListComponent = class WorkersListComponent {\n  checkBoxes;\n  ngAfterViewInit() {\n    console.log(this.checkBoxes);\n    this.checkBoxes.forEach(elementRef => {\n      console.log(elementRef.nativeElement);\n      elementRef.nativeElement.addEventListener('change', () => {\n        alert(\"1\");\n      });\n    });\n  }\n};\n__decorate([ViewChildren('addList')], WorkersListComponent.prototype, \"checkBoxes\", void 0);\nWorkersListComponent = __decorate([Component({\n  selector: 'workersList',\n  standalone: true,\n  templateUrl: 'workersList.component.html',\n  styleUrl: './styles/workersList.component.scss'\n})], WorkersListComponent);\nexport { WorkersListComponent };\n// addCheckboxesListener(): void {\n//     const checkboxes: HTMLInputElement[] = [];\n//     this.checkBoxes.forEach((checkbox) => {\n//         checkboxes.push(checkbox.nativeElement);\n//     });\n//     alert(checkboxes);\n//     checkboxes.forEach((checkbox) => {\n//         checkbox.addEventListener('change', function () {\n//             alert(\"1\");\n//         });\n//     });\n// }","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}