{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Input, ViewChild, ViewEncapsulation } from \"@angular/core\";\nlet TimetableComponent = class TimetableComponent {\n  viewContainerRef;\n  fio;\n  checked;\n  timeTable;\n  tpl;\n  view;\n  constructor(viewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n  ngOnChanges(changes) {\n    if (changes.checked || changes.fio) {\n      if (this.checked) {\n        this.addWorker();\n      } else {\n        this.deleteWorker();\n      }\n    }\n  }\n  deleteWorker() {\n    console.log(\"del\" + this.fio);\n  }\n  addWorker() {\n    this.view = this.viewContainerRef.createEmbeddedView(this.tpl);\n    this.timeTable.nativeElement.appendChild(this.view.rootNodes[0]);\n  }\n};\n__decorate([Input()], TimetableComponent.prototype, \"fio\", void 0);\n__decorate([Input()], TimetableComponent.prototype, \"checked\", void 0);\n__decorate([ViewChild('timeTable')], TimetableComponent.prototype, \"timeTable\", void 0);\n__decorate([ViewChild('tpl1')], TimetableComponent.prototype, \"tpl\", void 0);\nTimetableComponent = __decorate([Component({\n  selector: 'timetable',\n  standalone: true,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: 'timetable.component.html',\n  styleUrl: './styles/timetable.component.scss'\n})], TimetableComponent);\nexport { TimetableComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}